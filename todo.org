* Ändra pair till prefix
** ,foo bar
** lägg till stöd i parser
*** lägg till PairForm
** readme/test
* demo/bookings.gf
** add Resource.min-length/max-length
*** default min-length to 1 days
*** use min-length to init end
*** fail if booking < min-length or > max-length
**** add and/or macros
**** add try:/catch:/fail
***** require try: or catch: if code contains fail
***** forward error on try:
* ---
* add string dump support for \n
* add negation using !
** NotForm
** compile value 
** emit Not op
*** call .Bool
* add trait: (...) X
** create trait with parents
* add trait parents to type:
* add Table
** key/records
* add Ratio type
** add math module
** use big.Rat
** add Int / with Ratio result
* add String interpolation
** read form following @ & print last value
** add Writer type
** add Type.Print(Val, Writer) error
** add Type.String() string
** add print method
** use bytes.Buffer
** compile form, call: Print with buffer, call: Print with buffer/string, call: String with buffer 

let: foo 42 "@(foo)bar"

* add Loop op
** add Break/Next error
*** trap in Loop.Evaluate
** add while macro to lib/abc

macro: while: (cond body) {
  '(loop: (@cond else: break @body))
}

* add optional type literals
** create optional if lookup for X? fails
* add union type literals
** parse X|Y as union
*** handle in ParseId
